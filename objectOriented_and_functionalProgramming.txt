// <Declare JavaScript Objects as Variables>
var motorBike = {
  "wheels": 2,
  "engines": 1,
  "seats": 2
};


// <Construct JavaScript Objects with Functions>
var MotorBike = function() {
  this.wheels = 2;
  this.engines = 1;
  this.seats = 2;
};


// <Make Instances of Objects with a Constructor Function>
var Car = function() {
  this.wheels = 4;
  this.engines = 1;
  this.seats = 5;
};

var myCar = new Car();
myCar.nickname = "voyager";


// <Make Unique Objects by Passing Parameters to our Constructor>
var Car = function(wheels, seats, engines) {
  //Change this constructor
  this.wheels = wheels;
  this.seats = seats;
  this.engines = engines;
};

var myCar = new Car(4, 2, 1);


// <Make Object Properties Private>

var Car = function() {
  // this is a private variable
  var speed = 10;

  // these are public methods
  this.accelerate = function(change) {
    speed += change;
  };

  this.decelerate = function() {
    speed -= 5;
  };

  this.getSpeed = function() {
    return speed;
  };
};

var Bike = function() {
  var gear = 1;
  
  this.setGear = function(gearVal){
    gear = gearVal;
  };
  
  this.getGear = function(){
    return gear;
  };

};

var myCar = new Car();
var myBike = new Bike();


// <Iterate over Arrays with map>
var oldArray = [1,2,3,4,5];

var newArray = oldArray.map(function(val){
  return val+3;
});


// <Condense arrays with reduce>
var array = [4,5,6,7,8];
var singleVal = 0;

singleVal = array.reduce(function(previousVal, currentVal){
  return previousVal + currentVal;
}, 0);


// <Filter Arrays with filter>
var oldArray = [1,2,3,4,5,6,7,8,9,10];

var newArray = oldArray.filter(function(val){
  return val<6;
});


// <Sort Arrays with sort>
var array = [1, 12, 21, 2];

// Sort largest to smallest.

array.sort(function(a, b){
  return b-a;
});


// <Reverse Arrays with reverse>
var array = [1,2,3,4,5,6,7];
var newArray = [];

newArray = array.reverse();


// <Concatenate Arrays with concat>
var oldArray = [1,2,3];
var newArray = [];

var concatMe = [4,5,6];

newArray = oldArray.concat(concatMe);


// <Split Strings with split>

var string = "Split me into an array";
var array = [];

array = string.split(' ');


// <Join Strings with join>
var joinMe = ["Split","me","into","an","array"];
var joinedString = '';

joinedString = joinMe.join(" ");

